{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides automated code quality analysis including code smells, design patterns, and best practices suggestions",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.tsx",
      "src/**/*.ts",
      "src/**/*.js",
      "src/**/*.jsx",
      "tests/**/*.tsx",
      "tests/**/*.ts",
      "*.tsx",
      "*.ts",
      "*.js",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, duplicate code, large classes, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for React/TypeScript best practices, proper error handling, and performance optimizations\n4. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n5. **Performance**: Identify potential performance bottlenecks and optimization opportunities\n6. **Maintainability**: Suggest refactoring opportunities that would make the code easier to maintain\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code example showing the improvement\n- Reasoning for why this change would be beneficial\n- Priority level (High/Medium/Low)\n\nConsider the project's tech stack (React 18, TypeScript, Vite, Tailwind CSS, React Three Fiber) and maintain compatibility with existing functionality. Focus on actionable suggestions that align with the project's architecture patterns and coding conventions."
  }
}